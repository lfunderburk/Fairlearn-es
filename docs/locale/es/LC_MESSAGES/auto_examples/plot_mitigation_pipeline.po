# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018 - 2021, Fairlearn contributors
# This file is distributed under the same license as the Fairlearn package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Fairlearn \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-15 12:35-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../auto_examples/plot_mitigation_pipeline.rst:13
msgid ""
"Click :ref:`here "
"<sphx_glr_download_auto_examples_plot_mitigation_pipeline.py>` to "
"download the full example code"
msgstr ""

#: ../../auto_examples/plot_mitigation_pipeline.rst:23
msgid "Passing pipelines to mitigation techniques"
msgstr ""

#: ../../auto_examples/plot_mitigation_pipeline.rst:27
msgid ""
"This notebook shows how to pass :class:`sklearn.pipeline.Pipeline` to "
"mitigation techniques from Fairlearn. Note that the notebook is not to be"
" used as an example for how to assess and mitigate fairness. It is merely"
" a demonstration of the technical aspects of passing "
":class:`sklearn.pipeline.Pipeline`. For more information around proper "
"fairness assessment and mitigation please refer to the :ref:`user_guide`."
msgstr ""

#: ../../auto_examples/plot_mitigation_pipeline.rst:60
msgid ""
"Below we load the \"Adult\" census dataset and split its features, "
"sensitive features, and labels into train and test sets."
msgstr ""

#: ../../auto_examples/plot_mitigation_pipeline.rst:92
msgid ""
"To illustrate Fairlearn's compatibility with "
":class:`~sklearn.pipeline.Pipeline` we first need to build our pipeline. "
"In the following we assemble a pipeline by combining preprocessing steps "
"with an estimator. The preprocessing steps include imputing, scaling for "
"numerical features and one-hot encoding for categorical features."
msgstr ""

#: ../../auto_examples/plot_mitigation_pipeline.rst:141
msgid ""
"Below we will pass the pipeline to some of our mitigation techniques, "
"starting with :class:`fairlearn.postprocessing.ThresholdOptimizer`:"
msgstr ""

#: ../../auto_examples/plot_mitigation_pipeline.rst:173
#: ../../auto_examples/plot_mitigation_pipeline.rst:221
msgid "Out:"
msgstr ""

#: ../../auto_examples/plot_mitigation_pipeline.rst:198
msgid ""
"Similarly, :class:`fairlearn.reductions.ExponentiatedGradient` works with"
" pipelines. Since it requires the :code:`sample_weight` parameter of the "
"underlying estimator internally we need to provide it with the correct "
"way of passing :code:`sample_weight` to just the :code:`\"classifier\"` "
"step using the step name followed by two underscores and "
":code:`sample_weight`."
msgstr ""

#: ../../auto_examples/plot_mitigation_pipeline.rst:233
msgid "**Total running time of the script:** ( 0 minutes  33.830 seconds)"
msgstr ""

#: ../../auto_examples/plot_mitigation_pipeline.rst:248
msgid ""
":download:`Download Python source code: plot_mitigation_pipeline.py "
"<plot_mitigation_pipeline.py>`"
msgstr ""

#: ../../auto_examples/plot_mitigation_pipeline.rst:254
msgid ""
":download:`Download Jupyter notebook: plot_mitigation_pipeline.ipynb "
"<plot_mitigation_pipeline.ipynb>`"
msgstr ""

#: ../../auto_examples/plot_mitigation_pipeline.rst:261
msgid "`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr ""

